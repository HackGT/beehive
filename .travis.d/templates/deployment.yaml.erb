apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: <%= app['uid'] %>
  labels:
    name: <%= app['uid'] %>
    heritage: Biodomes
spec:
  replicas: <%= (app['deployment'] and app['deployment']['replicas']) or 1 %>
  template:
    metadata:
      name: <%= app['uid'] %>
      labels:
        name: <%= app['uid'] %>
    spec:
        containers:
          - image: <%= app['git']['user'] %>/<%= app['git']['shortname'] %>:<%= app['docker-tag'] %>
            imagePullPolicy: Always
            resources:
              requests:
                cpu: 10m
            name: <%= app['uid'] %>
            env:
              - name: PORT
                value: !!str <%= app['target_port'] or 3000 %>
              <% if app['wants'] && app['wants']['mongo'] %>
              - name: MONGO_URL
                value: !!str mongodb://<%= biodome['mongo'] %>/<%= app['uid'] %>
              <% end %>
              <% app['env']&.each do |name, value| %>
              - name: <%= name %>
              <% if value.is_a? Hash %>
                value: !!str <%= JSON.generate(value).to_s.inspect %>
              <% else %>
                value: !!str <%= value.to_s.inspect %>
              <% end %>
              <% end %>
              <% app['secrets']&.each do |name| %>
              - name: <%= name %>
                valueFrom:
                  secretKeyRef:
                    name: <%= app['secrets-source'] or "#{app['uid']}-secrets" %>
                    key: <%= name %>
              <% end %>
              <% app['files']&.each do |key, file| %>
              - name: <%= key %>
                value: <%= file['full_path'] %>
              <% end %>
            <% unless app['files'].empty? %>
            volumeMounts:
              - mountPath: <%= POD_FILE_DIR %>
                name: <%= app['uid'] %>
            <% end %>
            <% unless app['health'].nil? %>
            livenessProbe:
              httpGet:
                path: <%= app['health']['path'] or '/' %>
                port: <%= app['target_port'] or 3000 %>
              initialDelaySeconds: 3
              periodSeconds: 10
            <% end %>
            ports:
              - containerPort: <%= app['target_port'] or 3000 %>
                name: node
        <% unless app['files'].empty? %>
        volumes:
          - name: <%= app['uid'] %>
            configMap:
              name: <%= app['uid'] %>
              items:
              <% app['files']&.each do |key, file| %>
              - key: <%= file['key'] %>
                path: <%= file['path'] %>
              <% end %>
        <% end %>

